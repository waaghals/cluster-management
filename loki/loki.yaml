apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd
spec:
  project: monitoring
  source:
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 0.48.4
    chart: loki-distributed
    helm:
      values: |
        nameOverride: loki
        fullnameOverride: loki

        global:
          dnsService: "kube-dns"
          dnsNamespace: "kube-system"

        loki:
          serviceScheme: https
          user: user
          password: pass
          podSecurityContext:
            fsGroup: 10001
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10001
          containerSecurityContext:
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false

          schemaConfig:
            configs:
              - from: 2020-09-07
                store: boltdb-shipper
                object_store: gcs
                schema: v11
                index:
                  prefix: loki_index_
                  period: 24h

          storageConfig:
            gcs:
              bucket_name: loki.gcs.waaghals.dev
            boltdb_shipper:
              shared_store: gcs
              active_index_directory: /var/loki/index
              cache_location: /var/loki/cache
              cache_ttl: 168h
        
        ingester:
          extraEnv:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/gcloud/gcloud-credentials.json
          extraVolumeMounts:
            - mountPath: /etc/gcloud
              name: gcloud-config
              readOnly: true
          extraVolumes:
            - name: gcloud-config
              secret:
                secretName: gcloud-config

        # ServiceMonitor configuration
        serviceMonitor:
          enabled: true

        # Rules for the Prometheus Operator
        prometheusRule:
          enabled: true
          groups:
            - name: loki-rules
              rules:
                - record: job:loki_request_duration_seconds_bucket:sum_rate
                  expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job)
                - record: job_route:loki_request_duration_seconds_bucket:sum_rate
                  expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job, route)
                - record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate
                  expr: sum(rate(container_cpu_usage_seconds_total[1m])) by (node, namespace, pod, container)

        distributor:
          replicas: 1
          autoscaling:
            enabled: false
            minReplicas: 1
            maxReplicas: 3
            targetCPUUtilizationPercentage: 60

        querier:
          replicas: 1
          autoscaling:
            enabled: false
            minReplicas: 1
            maxReplicas: 3
            targetCPUUtilizationPercentage: 60
          extraEnv:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/gcloud/gcloud-credentials.json
          extraVolumeMounts:
            - mountPath: /etc/gcloud
              name: gcloud-config
              readOnly: true
          extraVolumes:
            - name: gcloud-config
              secret:
                secretName: gcloud-config


        queryFrontend:
          replicas: 1
          autoscaling:
            enabled: false
            minReplicas: 1
            maxReplicas: 3
            targetCPUUtilizationPercentage: 60

        gateway:
          enabled: true
          replicas: 1
          autoscaling:
            enabled: false
            minReplicas: 1
            maxReplicas: 3
            targetCPUUtilizationPercentage: 60
          podSecurityContext:
            fsGroup: 101
            runAsGroup: 101
            runAsNonRoot: true
            runAsUser: 101
          containerSecurityContext:
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
          ingress:
            enabled: true
            ingressClassName: 'nginx'
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt
            hosts:
              - host: loki.management.waaghals.dev
                paths:
                  - path: /
                    pathType: Prefix
            tls:
              - secretName: loki-gateway-tls
                hosts:
                  - loki.management.waaghals.dev

        compactor:
          enabled: true

        ruler:
          enabled: false
          kind: Deployment

        indexGateway:
          enabled: false
  destination:
    server: https://kubernetes.default.svc
    namespace: loki
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
